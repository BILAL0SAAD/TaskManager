@{
    ViewData["Title"] = "Cache Dashboard";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

<div class="container mt-5">
    <h2 class="mb-4 text-center text-primary">🔧 Cache Management Dashboard</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>Success!</strong> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="d-grid gap-3 col-8 mx-auto">
        <form asp-action="TestCachePerformance" method="post" id="testForm">
            <button type="submit" class="btn btn-outline-primary btn-lg w-100">
                ⚙️ Test Cache Performance
            </button>
        </form>

        <form asp-action="ClearUserCache" method="post">
            <button type="submit" class="btn btn-outline-danger btn-lg w-100">
                🗑️ Clear User Cache
            </button>
        </form>

        <form asp-action="WarmupCache" method="post">
            <button type="submit" class="btn btn-outline-success btn-lg w-100">
                🔥 Warm Up Cache
            </button>
        </form>
    </div>

    <hr class="my-5" />

    <div id="testResults" class="text-center d-none">
        <h5 class="text-info">⏱️ Test Results</h5>
        <ul class="list-group col-8 mx-auto mt-3" id="resultsList"></ul>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.getElementById("testForm").addEventListener("submit", function (e) {
        e.preventDefault();

        // Optional: Show loading indicator here

        fetch('@Url.Action("TestCachePerformance", "Cache")', {
            method: 'POST',
            headers: {
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            }
        })
        .then(res => res.json())
        .then(data => {
            console.log("Returned Data:", data); // Debug log

            const list = document.getElementById("resultsList");
            list.innerHTML = "";

            if (data.results && data.results.length > 0) {
                data.results.forEach(item => {
                    const li = document.createElement("li");
                    li.className = "list-group-item";
                    li.innerHTML = `<strong>${item.test}</strong> - ${item.time} (${item.status})`;
                    list.appendChild(li);
                });
                document.getElementById("testResults").classList.remove("d-none");
            } else {
                const li = document.createElement("li");
                li.className = "list-group-item list-group-item-warning";
                li.innerText = "No test data was returned.";
                list.appendChild(li);
                document.getElementById("testResults").classList.remove("d-none");
            }
        })
        .catch(error => {
            console.error("Error running cache test:", error);
            alert("Something went wrong while testing cache performance.");
        });
    });
</script>
